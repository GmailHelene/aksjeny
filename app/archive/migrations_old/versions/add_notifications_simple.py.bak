"""Add notification tables

Revision ID: notification_v1
Revises: 497c478a5628
Create Date: 2025-06-30 00:35:00.000000

"""
from alembic import op
import sqlalchemy as sa
from datetime import datetime

# revision identifiers, used by Alembic.
revision = 'notification_v1'
down_revision = '497c478a5628'
branch_labels = None
depends_on = None


def upgrade():
    # Create notifications table
    op.create_table('notifications',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('message', sa.Text(), nullable=False),
        sa.Column('type', sa.String(length=50), nullable=False),
        sa.Column('is_read', sa.Boolean(), nullable=False, default=False),
        sa.Column('created_at', sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.Column('read_at', sa.DateTime(), nullable=True),
        sa.Column('data', sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id']),
    )
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_index(op.f('ix_notifications_created_at'), 'notifications', ['created_at'], unique=False)

    # Create price_alerts table
    op.create_table('price_alerts',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('ticker', sa.String(length=20), nullable=False),
        sa.Column('condition', sa.String(length=10), nullable=False),
        sa.Column('target_price', sa.Float(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
        sa.Column('created_at', sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.Column('triggered_at', sa.DateTime(), nullable=True),
        sa.Column('notification_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id']),
        sa.ForeignKeyConstraint(['notification_id'], ['notifications.id']),
    )
    op.create_index(op.f('ix_price_alerts_user_id'), 'price_alerts', ['user_id'], unique=False)
    op.create_index(op.f('ix_price_alerts_ticker'), 'price_alerts', ['ticker'], unique=False)

    # Create notification_settings table
    op.create_table('notification_settings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('price_alerts_enabled', sa.Boolean(), nullable=False, default=True),
        sa.Column('news_alerts_enabled', sa.Boolean(), nullable=False, default=True),
        sa.Column('portfolio_alerts_enabled', sa.Boolean(), nullable=False, default=True),
        sa.Column('ai_insights_enabled', sa.Boolean(), nullable=False, default=True),
        sa.Column('email_notifications', sa.Boolean(), nullable=False, default=False),
        sa.Column('push_notifications', sa.Boolean(), nullable=False, default=True),
        sa.Column('updated_at', sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id']),
    )
    op.create_index(op.f('ix_notification_settings_user_id'), 'notification_settings', ['user_id'], unique=True)

    # Create ai_models table
    op.create_table('ai_models',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('model_type', sa.String(length=50), nullable=False),
        sa.Column('version', sa.String(length=20), nullable=False),
        sa.Column('accuracy', sa.Float(), nullable=True),
        sa.Column('training_date', sa.DateTime(), nullable=True),
        sa.Column('parameters', sa.JSON(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False, default=False),
        sa.Column('is_production', sa.Boolean(), nullable=False, default=False),
        sa.Column('model_path', sa.String(length=255), nullable=True),
        sa.Column('scaler_path', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.Column('updated_at', sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.PrimaryKeyConstraint('id'),
    )

    # Create prediction_logs table
    op.create_table('prediction_logs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('model_id', sa.Integer(), nullable=False),
        sa.Column('ticker', sa.String(length=20), nullable=False),
        sa.Column('prediction_type', sa.String(length=50), nullable=False),
        sa.Column('predicted_value', sa.Float(), nullable=False),
        sa.Column('actual_value', sa.Float(), nullable=True),
        sa.Column('confidence', sa.Float(), nullable=True),
        sa.Column('prediction_date', sa.DateTime(), nullable=False, default=datetime.utcnow),
        sa.Column('target_date', sa.DateTime(), nullable=False),
        sa.Column('features_used', sa.JSON(), nullable=True),
        sa.Column('market_conditions', sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['model_id'], ['ai_models.id']),
    )
    op.create_index(op.f('ix_prediction_logs_ticker'), 'prediction_logs', ['ticker'], unique=False)
    op.create_index(op.f('ix_prediction_logs_prediction_date'), 'prediction_logs', ['prediction_date'], unique=False)


def downgrade():
    # Drop tables in reverse order
    op.drop_index(op.f('ix_prediction_logs_prediction_date'), table_name='prediction_logs')
    op.drop_index(op.f('ix_prediction_logs_ticker'), table_name='prediction_logs')
    op.drop_table('prediction_logs')
    
    op.drop_table('ai_models')
    
    op.drop_index(op.f('ix_notification_settings_user_id'), table_name='notification_settings')
    op.drop_table('notification_settings')
    
    op.drop_index(op.f('ix_price_alerts_ticker'), table_name='price_alerts')
    op.drop_index(op.f('ix_price_alerts_user_id'), table_name='price_alerts')
    op.drop_table('price_alerts')
    
    op.drop_index(op.f('ix_notifications_created_at'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_table('notifications')
